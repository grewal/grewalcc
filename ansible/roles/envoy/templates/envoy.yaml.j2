# {{ ansible_managed }}
---
admin:
  address:
    socket_address:
      address: "{{envoy_admin_address}}"
      port_value: {{envoy_admin_port}}
static_resources:
  listeners:
    - name: listener_https_main
      address:
        socket_address:
          address: "{{envoy_listener_address}}"
          port_value: {{envoy_listener_port}}
      filter_chains:
        - transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": |-
                type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: "/etc/letsencrypt/live/grewal.cc/fullchain.pem"
                    private_key:
                      filename: "/etc/letsencrypt/live/grewal.cc/privkey.pem"
                alpn_protocols: ["h2", "http/1.1"]
          filters:
            - name: envoy.filters.network.rbac
              typed_config:
                "@type": |-
                  type.googleapis.com/envoy.extensions.filters.network.rbac.v3.RBAC
                stat_prefix: rbac_l3_ip_block
                rules:
                  action: DENY
                  policies:
                    "static_ip_deny_list":
                      permissions:
                        - any: true
                      principals:
                        - direct_remote_ip:
                            address_prefix: "185.187.168.103"
                            prefix_len: 32
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": |-
                  type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_https
                use_remote_address: true
                xff_num_trusted_hops: 0
                common_http_protocol_options:
                  idle_timeout: 3600s
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": |-
                        type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        text_format_source:
                          inline_string: |
                            [%START_TIME%] "%REQ(:METHOD)% \
                            %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" \
                            %RESPONSE_CODE% %RESPONSE_FLAGS% \
                            UpstreamHost=%UPSTREAM_HOST% \
                            Duration=%DURATION%ms \
                            XFF=[%REQ(x-forwarded-for)%] \
                            UA=[%REQ(user-agent)%] \
                            CT=[%REQ(content-type)%] \
                            Auth=[%REQ(:authority)%]
                http_filters:
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": |-
                        type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      transport_api_version: V3
                      failure_mode_allow: false
                      with_request_body:
                        max_request_bytes: 8192
                        allow_partial_message: true
                      http_service:
                        server_uri:
                          uri: |-
                            http://127.0.0.1:
                              {{authz_service_port | default(9001)}}
                          cluster: authz_cluster
                          timeout: 0.2s
                        path_prefix: "/authz"
                        authorization_request:
                          allowed_headers:
                            patterns:
                              - exact: x-forwarded-for
                              - exact: user-agent
                              - exact: content-type
                              - exact: :authority
                              - exact: :method
                              - exact: :path
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: x-authz-user-id
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": |-
                        type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": |-
                        type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: grewalcc_website_routes
                  virtual_hosts:
                    - name: grewal_cc_virtual_host
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/grewal.HomeGeneral/"
                          route:
                            cluster: grewal_backend_cluster
                            timeout: 15s
                        - match:
                            prefix: "/js/"
                          route:
                            cluster: gcs_static_assets_cluster
                            host_rewrite_literal: storage.googleapis.com
                            regex_rewrite:
                              pattern:
                                google_re2: {}
                                regex: "^/js/(.*)"
                              substitution: >-
                                /gcc-terraform-state-bucket/grewalcc/js/\\1
                            timeout: 10s
                        - match:
                            prefix: "/"
                          route:
                            cluster: gcs_static_assets_cluster
                            host_rewrite_literal: storage.googleapis.com
                            prefix_rewrite: >-
                              /gcc-terraform-state-bucket/grewalcc/index.html
                            timeout: 10s
    - name: listener_http_redirect_to_https
      address:
        socket_address:
          address: "{{envoy_listener_address}}"
          port_value: 80
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": |-
                  type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http_redirect
                route_config:
                  name: local_route_http_redirect
                  virtual_hosts:
                    - name: vh_redirect_all_to_https
                      domains: ["*"]
                      routes:
                        - match: {prefix: "/"}
                          redirect:
                            https_redirect: true
                            strip_query: false
                            response_code: MOVED_PERMANENTLY
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": |-
                        type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: grewal_backend_cluster
      connect_timeout: 5s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: grewal_backend_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: gcc-gem-a.node.consul
                      port_value: 50051
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": |-
            type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
    - name: gcs_static_assets_cluster
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      connect_timeout: 5s
      load_assignment:
        cluster_name: gcs_static_assets_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: storage.googleapis.com
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": |-
            type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: storage.googleapis.com
    - name: authz_cluster
      connect_timeout: 0.5s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: authz_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: gcc-gem-a.node.consul
                      port_value: "{{authz_service_port | default(9001)}}"
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": |-
            type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http_protocol_options: {}
