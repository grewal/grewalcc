# ~/src/gcc-gem-a/ansible/roles/envoy/templates/envoy.yaml.j2
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901 # Admin port

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8888 # Main listener port Nginx proxies to
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                  grpc: {}
                route:
                  cluster: service_grpc # Route to the EDS-discovered backend cluster
                  timeout: 0s

  clusters:
  # --- Cluster definition for Consul's xDS server ---
  - name: consul_cluster # Name for the cluster pointing to Consul
    connect_timeout: 1s
    type: STRICT_DNS # Or STATIC if preferred and the IP is fixed
    lb_policy: ROUND_ROBIN
    # Upstream protocol MUST be HTTP/2 for gRPC
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: consul_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # Use the vaulted variable for the Consul host IP
                address: "{{ consul_host_ip }}" # <-- Variable used here
                # Target Consul's default gRPC xDS port
                port_value: 8502

  # --- Cluster definition for the backend service (discovered via EDS) ---
  - name: service_grpc # Your backend service cluster
    connect_timeout: 1s
    type: EDS # Use Endpoint Discovery Service
    lb_policy: ROUND_ROBIN # Load balancing policy
    # EDS configuration
    eds_cluster_config:
      service_name: grewal-backend # Service name as registered in Consul
      eds_config:
        resource_api_version: V3
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
            - envoy_grpc:
                cluster_name: consul_cluster # Point to the Consul cluster defined above
          set_node_on_first_message_only: true

    # Specify upstream uses HTTP/2 for gRPC
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}

# Node identifier required for EDS/xDS
node:
 id: envoy-node-1
 cluster: grewalcc_proxy
