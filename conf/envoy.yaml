admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901 # Admin port

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8888 # Main listener port Nginx proxies to
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                  grpc: {}
                route:
                  cluster: service_grpc # Route to the EDS-discovered backend cluster
                  timeout: 0s

  clusters:
  # --- NEW CLUSTER DEFINITION FOR CONSUL'S xDS SERVER ---
  # This cluster tells Envoy how to reach the Consul agent's gRPC port (8502)
  # running on the HOST machine.
  - name: consul_cluster # Name for the cluster pointing to Consul
    connect_timeout: 1s
    type: STRICT_DNS # Or STATIC if preferred and the IP is fixed
    lb_policy: ROUND_ROBIN
    # Upstream protocol MUST be HTTP/2 for gRPC
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: consul_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # Target the HOST's IP where Consul agent is running
                # (Replace if your host IP differs, but 10.128.0.22 is from your JSON)
                address: 10.128.0.22
                # Target Consul's default gRPC xDS port
                port_value: 8502
  # --- END NEW CLUSTER DEFINITION FOR CONSUL ---

  # --- MODIFIED CLUSTER DEFINITION FOR YOUR BACKEND SERVICE ---
  - name: service_grpc # Your backend service cluster
    connect_timeout: 1s
    # --- CHANGE FOR STEP 16: Use EDS ---
    type: EDS
    lb_policy: ROUND_ROBIN # Load balancing policy for the discovered endpoints
    # EDS configuration: Tell Envoy how to discover endpoints for this cluster
    eds_cluster_config:
      # Specify the name of the service AS REGISTERED IN CONSUL
      service_name: grewal-backend
      # Tell Envoy which cluster provides the EDS service (the consul_cluster defined above)
      eds_config:
        resource_api_version: V3 # Use V3 API
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
            - envoy_grpc:
                # Point to the cluster name defined above for Consul
                cluster_name: consul_cluster
          # Set initial fetch timeout - increase if needed on slow networks/systems
          set_node_on_first_message_only: true # Important for Consul compatibility

    # --- REMOVED load_assignment section, EDS provides this ---
    # --- END CHANGE FOR STEP 16 ---

    # Specify that the upstream uses HTTP/2 (required for gRPC) - Still needed
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}

    # Optional but Recommended: Add Envoy Active Health Checking (in addition to Consul's)
    # health_checks:
    # - timeout: 1s
    #   interval: 10s
    #   unhealthy_threshold: 2
    #   healthy_threshold: 2
    #   grpc_health_check:
    #     service_name: '' # Standard gRPC health check service name
    #   initial_jitter:
    #     seconds: 1

# Optional: Node identifier required for EDS/xDS
node:
 id: envoy-node-1 # Matches what was in your original JSON
 cluster: grewalcc_proxy # Matches what was in your original JSON
