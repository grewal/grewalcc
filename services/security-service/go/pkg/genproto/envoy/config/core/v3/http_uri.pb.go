// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: envoy/config/core/v3/http_uri.proto

package corev3

import (
	_ "github.com/cncf/xds/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envoy external URI descriptor
type HttpUri struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The HTTP server URI. It should be a full FQDN with protocol, host and path.
	//
	// Example:
	//
	// .. code-block:: yaml
	//
	//	uri: https://www.googleapis.com/oauth2/v1/certs
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	// Specify how “uri“ is to be fetched. Today, this requires an explicit
	// cluster, but in the future we may support dynamic cluster creation or
	// inline DNS resolution. See `issue
	// <https://github.com/envoyproxy/envoy/issues/1606>`_.
	//
	// Types that are valid to be assigned to HttpUpstreamType:
	//
	//	*HttpUri_Cluster
	HttpUpstreamType isHttpUri_HttpUpstreamType `protobuf_oneof:"http_upstream_type"`
	// Sets the maximum duration in milliseconds that a response can take to arrive upon request.
	Timeout       *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpUri) Reset() {
	*x = HttpUri{}
	mi := &file_envoy_config_core_v3_http_uri_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpUri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpUri) ProtoMessage() {}

func (x *HttpUri) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_core_v3_http_uri_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpUri.ProtoReflect.Descriptor instead.
func (*HttpUri) Descriptor() ([]byte, []int) {
	return file_envoy_config_core_v3_http_uri_proto_rawDescGZIP(), []int{0}
}

func (x *HttpUri) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *HttpUri) GetHttpUpstreamType() isHttpUri_HttpUpstreamType {
	if x != nil {
		return x.HttpUpstreamType
	}
	return nil
}

func (x *HttpUri) GetCluster() string {
	if x != nil {
		if x, ok := x.HttpUpstreamType.(*HttpUri_Cluster); ok {
			return x.Cluster
		}
	}
	return ""
}

func (x *HttpUri) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type isHttpUri_HttpUpstreamType interface {
	isHttpUri_HttpUpstreamType()
}

type HttpUri_Cluster struct {
	// A cluster is created in the Envoy "cluster_manager" config
	// section. This field specifies the cluster name.
	//
	// Example:
	//
	// .. code-block:: yaml
	//
	//	cluster: jwks_cluster
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3,oneof"`
}

func (*HttpUri_Cluster) isHttpUri_HttpUpstreamType() {}

var File_envoy_config_core_v3_http_uri_proto protoreflect.FileDescriptor

const file_envoy_config_core_v3_http_uri_proto_rawDesc = "" +
	"\n" +
	"#envoy/config/core/v3/http_uri.proto\x12\x14envoy.config.core.v3\x1a\x1egoogle/protobuf/duration.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\"\xcf\x01\n" +
	"\aHttpUri\x12\x19\n" +
	"\x03uri\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03uri\x12#\n" +
	"\acluster\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01H\x00R\acluster\x12G\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationB\x12\xfaB\x0f\xaa\x01\f\b\x01\x1a\x06\b\x80\x80\x80\x80\x102\x00R\atimeout: \x9aň\x1e\x1b\n" +
	"\x19envoy.api.v2.core.HttpUriB\x19\n" +
	"\x12http_upstream_type\x12\x03\xf8B\x01B\x80\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"\"io.envoyproxy.envoy.config.core.v3B\fHttpUriProtoP\x01ZBgithub.com/envoyproxy/go-control-plane/envoy/config/core/v3;corev3b\x06proto3"

var (
	file_envoy_config_core_v3_http_uri_proto_rawDescOnce sync.Once
	file_envoy_config_core_v3_http_uri_proto_rawDescData []byte
)

func file_envoy_config_core_v3_http_uri_proto_rawDescGZIP() []byte {
	file_envoy_config_core_v3_http_uri_proto_rawDescOnce.Do(func() {
		file_envoy_config_core_v3_http_uri_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_core_v3_http_uri_proto_rawDesc), len(file_envoy_config_core_v3_http_uri_proto_rawDesc)))
	})
	return file_envoy_config_core_v3_http_uri_proto_rawDescData
}

var file_envoy_config_core_v3_http_uri_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_config_core_v3_http_uri_proto_goTypes = []any{
	(*HttpUri)(nil),             // 0: envoy.config.core.v3.HttpUri
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_envoy_config_core_v3_http_uri_proto_depIdxs = []int32{
	1, // 0: envoy.config.core.v3.HttpUri.timeout:type_name -> google.protobuf.Duration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_envoy_config_core_v3_http_uri_proto_init() }
func file_envoy_config_core_v3_http_uri_proto_init() {
	if File_envoy_config_core_v3_http_uri_proto != nil {
		return
	}
	file_envoy_config_core_v3_http_uri_proto_msgTypes[0].OneofWrappers = []any{
		(*HttpUri_Cluster)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_core_v3_http_uri_proto_rawDesc), len(file_envoy_config_core_v3_http_uri_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_core_v3_http_uri_proto_goTypes,
		DependencyIndexes: file_envoy_config_core_v3_http_uri_proto_depIdxs,
		MessageInfos:      file_envoy_config_core_v3_http_uri_proto_msgTypes,
	}.Build()
	File_envoy_config_core_v3_http_uri_proto = out.File
	file_envoy_config_core_v3_http_uri_proto_goTypes = nil
	file_envoy_config_core_v3_http_uri_proto_depIdxs = nil
}
