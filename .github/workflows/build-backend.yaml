name: Build, Test, and Deploy C++ Backend

# Trigger this workflow on pushes to ANY branch
on:
  push:

jobs:
  # --- JOB 1: Build and Test (Runs on ALL pushes) ---
  build:
    name: Build and Test grewal binary
    runs-on: ubuntu-latest # Use a standard GitHub-hosted runner
    steps:
      # 1. Get the code from the repository
      - name: Check out repository code
        uses: actions/checkout@v4

      # 2. Install all needed build/test tools and libraries
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends make g++ libprotobuf-dev protobuf-compiler libgrpc++-dev libgrpc-dev libabsl-dev libre2-dev libctemplate-dev libgflags-dev libgtest-dev

      # 3. Compile the C++ backend code
      - name: Build Backend
        run: make -C frontend

      # 4. Run the C++ tests
      - name: Run Tests
        run: make -C frontend test

      # 5. (Optional) Verify the binary exists
      - name: List build output
        run: ls -l frontend/grewal

      # 6. Upload the compiled binary (Needed for deploy job IF it runs)
      - name: Upload grewal artifact
        uses: actions/upload-artifact@v4
        with:
          name: grewal-binary
          path: frontend/grewal

  # --- JOB 2: Deploy to VM (Runs ONLY on 'master' pushes AFTER 'build' succeeds) ---
  deploy:
    name: Deploy grewal binary to VM
    needs: build # Depends on the 'build' job finishing successfully
    runs-on: ubuntu-latest

    # ***** THIS IS THE KEY CHANGE *****
    # Only run this 'deploy' job if the push was to the 'master' branch
    if: github.ref == 'refs/heads/master'

    steps:
      # 1. Download the binary artifact from the 'build' job
      - name: Download grewal artifact
        uses: actions/download-artifact@v4
        with:
          name: grewal-binary

      # 2. Make the downloaded binary executable
      - name: Set execute permissions on binary
        run: chmod +x ./grewal

      # 3. Connect to the VM via SSH and run deployment commands
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./grewal"
          target: "/home/monty/"
          script: |
            echo "Connection established to ${{ secrets.SSH_HOST }} as ${{ secrets.SSH_USER }}"
            echo "Deploying grewal binary (triggered from master branch)..."
            # IMPORTANT: These 'sudo' commands require passwordless sudo setup on the VM (Next Step!)
            sudo cp /home/monty/grewal /usr/local/bin/grewal
            echo "Restarting grewal systemd service..."
            sudo systemctl restart grewal.service
            # Optional: Clean up the copied binary
            # rm /home/monty/grewal
            echo "Deployment to VM completed successfully!"
